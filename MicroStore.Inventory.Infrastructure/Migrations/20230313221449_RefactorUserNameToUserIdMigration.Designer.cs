// <auto-generated />
using MicroStore.Inventory.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace MicroStore.Inventory.Infrastructure.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20230313221449_RefactorUserNameToUserIdMigration")]
    partial class RefactorUserNameToUserIdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MicroStore.Inventory.Domain.OrderAggregate.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("ShippingCost")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TaxCost")
                        .HasColumnType("float");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MicroStore.Inventory.Domain.OrderAggregate.OrderItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("Sku");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("MicroStore.Inventory.Domain.ProductAggregate.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("AllocatedStock")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MicroStore.Inventory.Domain.OrderAggregate.Order", b =>
                {
                    b.OwnsOne("MicroStore.Inventory.Domain.ValueObjects.Address", "BillingAddres", b1 =>
                        {
                            b1.Property<string>("OrderId")
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasDefaultValue("");

                            b1.Property<string>("AddressLine2")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasDefaultValue("");

                            b1.Property<string>("City")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasDefaultValue("");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasDefaultValue("");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("State")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("Zip")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.OwnsOne("MicroStore.Inventory.Domain.ValueObjects.Address", "ShippingAddress", b1 =>
                        {
                            b1.Property<string>("OrderId")
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasDefaultValue("");

                            b1.Property<string>("AddressLine2")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasDefaultValue("");

                            b1.Property<string>("City")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasDefaultValue("");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasDefaultValue("");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("State")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.Property<string>("Zip")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasDefaultValue("");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("BillingAddres")
                        .IsRequired();

                    b.Navigation("ShippingAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("MicroStore.Inventory.Domain.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("MicroStore.Inventory.Domain.OrderAggregate.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("MicroStore.Inventory.Domain.OrderAggregate.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
